# MAIN
# SWDreader

library(wmtsa)

source("/Users/lifepupil/Code/SWDreader/SWDreader_functions.txt")

startt = 400000
endt = 450000
t = 19800

wtExist = 1
hxExist = 1
h_phaseExist = 0

plot_MWT = F
debug1 = 0
debug2 = 0

# EEG channel 1 (RF-RB?) for mouse 35567_052213.lwr
print("reading channel data")
s = read.table("./SWDreader//singleChannel")

print("channel subset")
# kludge
s.sub = s$V1[startt:endt]
s.sub = data.frame(s.sub)


if (wtExist == 0) {
  print("Performing Morlet wavelet transform using wmtsa package ... ")
  s.sub$wt <- wavCWT(s.sub$s.sub, n.scale=200, scale.range=deltat(s.sub$s.sub) * c(1,128), shift=30, wavelet="morlet")
}

if (hxExist == 0) {
 harmonicity_series = rep(0, times = 1000)
 harmonicFreq_series = rep(0, times = 1000)

 for (t in 19000:20000) {
    tslice_power = Mod(wt[t, 10:80])
    harmonicity_series[t-18999] = harmonicDetect(tslice_power)$harmonicity_max
    harmonicFreq_series[t-18999] = harmonicDetect(tslice_power)$freq_candidate
  }
}

if (h_phaseExist == 0) {
  harmonicPhiFF_series = rep(0, times = 1000)
  test = matrix(0, nrow=70, ncol=1000)

  for (t in 1:1000) {
    test[ harmonicFreq_series[t]+c(1,8,13,16), t ] = 1

    t_H1_phi <- Arg(wt[t, harmonicFreq_series[t]])
#    t_H2_phi <- Arg(wt[t, harmonicFreq_series[t]] + )
#    t_H3_phi <- Arg(wt[t, harmonicFreq_series[t]])
#    t_H4_phi <- Arg(wt[t, harmonicFreq_series[t]])

    harmonicPhiFF_series[t] <- t_H1_phi
  }

  # TEST for correct data
  # library(grid)
  # grid.raster(test, interpolate=F)
}

if (plot_MWT == T) {
  print("Plotting modulus from Morlet wavelet transform of EEG")
  library(plotly)
  tArg_ly = t(data.matrix(Mod(wt[19000:20000, 10:80])))
  tMod_ly = t(data.matrix(Mod(wt[19000:20000, 10:80])))
  plot_ly(z = tMod_ly, type = "heatmap")
}

if (debug2 == 1) {
  # to compare superimposed peaks visually
  print("Plotting results")
  par(mfrow=c(3,1))
  plot(s.sub$s.sub[19000:20000], type='l')
  plot(harmonicPhiFF_series[1:1001], type='l')
  plot(harmonicFreq_series[1:1002], type='l')
}
